# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true

# ...

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Visual Studio Enterprise(83b0a651-0083-4050-b493-ae81845a61bb)'
    appType: 'webApp'
    WebAppName: 'NIC-Coreapp'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

- task: AzurePowerShell@4
  inputs:
    azureSubscription: 'Visual Studio Enterprise(83b0a651-0083-4050-b493-ae81845a61bb)'
    ScriptType: 'InlineScript'
    Inline: 'Unpublish-AzCdnEndpointContent -ProfileName nic-testcdn -ResourceGroupName NIC-test -EndpointName nic-test -PurgeContent "/*"'
    azurePowerShellVersion: 'LatestVersion'

- task: AzurePowerShell@4
  inputs:
    azureSubscription: 'Visual Studio Enterprise(83b0a651-0083-4050-b493-ae81845a61bb)'
    ScriptType: 'InlineScript'
    Inline: 'Publish-AzCdnEndpointContent -ProfileName nic-testcdn -ResourceGroupName NIC-test -EndpointName nic-test -LoadContent "/*"'
    azurePowerShellVersion: 'LatestVersion'
